(()=>{"use strict";const t=function(t,e,n){return{get:function(){var t=n.value.bind(this);return Object.defineProperty(this,e,{writable:!0,value:t}),t}}};var e=function(t,e,n,r){var o,i=arguments.length,s=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,r);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(s=(i<3?o(s):i>3?o(e,n,s):o(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s},n=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function s(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}u((r=r.apply(t,e||[])).next())}))},r=function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},o=function(t,e){for(var n=0,r=e.length,o=t.length;n<r;n++,o++)t[o]=e[n];return t};const i=function(){function i(t,e,n,r,o){this.buttons=t,this.popup=e,this.deck=n,this.dealer=r,this.player=o,this.attachButtonsHandlers(),this.init()}return i.prototype.deal=function(){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return this.popup.hide(),this.buttons.disableAll(),[4,this.supplyHandWithCard(this.player)];case 1:return t.sent(),[4,this.supplyHandWithCard(this.player)];case 2:return t.sent(),[4,this.supplyHandWithCard(this.dealer)];case 3:return t.sent(),[4,this.supplyHandWithCard(this.dealer,!1)];case 4:return t.sent(),this.buttons.reset.enable(),this.checkBlackjack(),[2]}}))}))},i.prototype.reset=function(){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return this.popup.hide(),this.buttons.disableAll(),this.supplyDeckWithCards(),this.dealer.empty(),this.player.empty(),[4,this.deck.shuffle()];case 1:return t.sent(),[4,this.deck.shuffle()];case 2:return t.sent(),this.buttons.deal.enable(),[2]}}))}))},i.prototype.hit=function(){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return this.buttons.disableAll(),[4,this.supplyHandWithCard(this.player)];case 1:return t.sent(),this.player.hasBust()?(this.dealer.revealTopCard(),this.popup.show("You lost!"),this.buttons.reset.enable()):this.player.hasCardsLimit?this.stand():(this.buttons.reset.enable(),this.buttons.enableHitAndStand()),[2]}}))}))},i.prototype.stand=function(){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return this.buttons.disableAll(),this.dealer.revealTopCard(),[4,this.supplyDealerWithCards()];case 1:return t.sent(),this.conclude(),[2]}}))}))},i.prototype.supplyHandWithCard=function(t,e){return void 0===e&&(e=!0),n(this,void 0,void 0,(function(){var n,o,i,s,a,u;return r(this,(function(r){switch(r.label){case 0:return n=this.deck.getOffsetTop(),o=n.x,i=n.y,s=t.getRect(),a=s.x,u=s.y,[4,t.push(this.deck.pop().setTransform(o-a,i-u)).drag(e)];case 1:return r.sent(),[2]}}))}))},i.prototype.checkBlackjack=function(){this.player.hasBlackjack()||this.dealer.hasBlackjack()?(this.popup.show("Blackjack!"),this.dealer.revealTopCard()):this.buttons.enableHitAndStand()},i.prototype.supplyDeckWithCards=function(){var t=this;o(o([],this.player.cards),this.dealer.cards).forEach((function(e){var n=e.getRect(),r=n.x,o=n.y,i=n.width,s=n.height,a=t.deck.getRect(),u=a.x,c=a.y;t.deck.push(e.hide().setTransform(r-u+i/2,o-c+s/2))}))},i.prototype.supplyDealerWithCards=function(){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return!this.dealer.canDrawCard()||this.dealer.hasCardsLimit?[3,3]:[4,this.supplyHandWithCard(this.dealer)];case 1:return t.sent(),[4,this.supplyDealerWithCards()];case 2:t.sent(),t.label=3;case 3:return[2]}}))}))},i.prototype.conclude=function(){var t=this.player.getScore(),e=this.dealer.getScore(),n="You lost!";this.dealer.hasBust()||t>e?n="You won!":t===e&&(n="Push!"),this.popup.show(n),this.buttons.reset.enable()},i.prototype.attachButtonsHandlers=function(){this.buttons.deal.attachHandler(this.deal),this.buttons.reset.attachHandler(this.reset),this.buttons.hit.attachHandler(this.hit),this.buttons.stand.attachHandler(this.stand)},i.prototype.init=function(){n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return[4,this.deck.intro()];case 1:case 2:return t.sent(),[4,this.deck.shuffle()];case 3:return t.sent(),this.buttons.deal.enable(),[2]}}))}))},e([t],i.prototype,"deal",null),e([t],i.prototype,"reset",null),e([t],i.prototype,"hit",null),e([t],i.prototype,"stand",null),i}(),s=function(){function t(t){this.elem=t}return t.prototype.attachHandler=function(t){this.elem.onclick=t},t.prototype.disable=function(){this.elem.setAttribute("disabled","")},t.prototype.enable=function(){this.elem.removeAttribute("disabled")},t}(),a=function(){function t(t,e,n,r){this.deal=t,this.reset=e,this.hit=n,this.stand=r}return t.prototype.disableAll=function(){this.deal.disable(),this.reset.disable(),this.hit.disable(),this.stand.disable()},t.prototype.enableHitAndStand=function(){this.hit.enable(),this.stand.enable()},t}();var u=(new Map).set("ace",(function(t,e){return t<11&&e<2?11:1})).set("two",(function(){return 2})).set("three",(function(){return 3})).set("four",(function(){return 4})).set("five",(function(){return 5})).set("six",(function(){return 6})).set("seven",(function(){return 7})).set("eight",(function(){return 8})).set("nine",(function(){return 9})).set("ten",(function(){return 10})).set("jack",(function(){return 10})).set("queen",(function(){return 10})).set("king",(function(){return 10}));var c=function(){return(c=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};const l=function(t){return new Promise((function(e){var n=t.map((function(t){return c(c({},t),{hasStarted:!1,hasEnded:!1})}));requestAnimationFrame((function t(){if(n.some((function(t){return!t.hasEnded}))){var r=Date.now();n.forEach((function(t){var e,n=t.start,o=t.end,i=t.onStart,s=t.onProgress,a=t.onEnd,u=t.hasStarted;t.hasEnded||r<n||(u||(t.hasStarted=!0,null==i||i()),null==s||s((e=(r-n)/(o-n))<.5?4*Math.pow(e,3):(e-1)*(2*e-2)*(2*e-2)+1),r>o&&(t.hasEnded=!0,null==a||a()))})),requestAnimationFrame(t)}else e()}))}))},h=function(t){var e=t.delay,n=void 0===e?0:e,r=t.duration,o=void 0===r?0:r,i=t.onStart,s=t.onProgress,a=t.onEnd,u=n+Date.now();return{start:u,onStart:i,onProgress:s,onEnd:a,end:u+o}},p=function(t,e,n){return t+(e-t)*n},f=function(){function t(t){this.elem=t,this.cards=[]}return t.prototype.push=function(t){return this.cards.push(t),this.elem.append(t.elem),this},t.prototype.pop=function(){return this.cards.pop()},t.prototype.getRect=function(){return this.elem.getBoundingClientRect()},Object.defineProperty(t.prototype,"count",{get:function(){return this.cards.length},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"topCard",{get:function(){return this.cards[this.count-1]},enumerable:!1,configurable:!0}),t}();var d,y=(d=function(t,e){return(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}d(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});const b=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return y(e,t),e.prototype.drag=function(t){return e=this,n=void 0,o=function(){var e,n,r,o,i=this;return function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}(this,(function(s){switch(s.label){case 0:return e=this.topCard.getTransform(),n=e.x,r=e.y,o=(3===this.count?0:this.count-3)*this.topCard.getRect().width,[4,l([h({duration:400,onProgress:function(t){i.topCard.setTransform(p(n,o,t),p(r,0,t))},onEnd:function(){t&&i.topCard.show()}})])];case 1:return s.sent(),[2]}}))},new((r=void 0)||(r=Promise))((function(t,i){function s(t){try{u(o.next(t))}catch(t){i(t)}}function a(t){try{u(o.throw(t))}catch(t){i(t)}}function u(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(t){t(n)}))).then(s,a)}u((o=o.apply(e,n||[])).next())}));var e,n,r,o},e.prototype.empty=function(){return this.cards=[],this},e.prototype.getScore=function(){return this.cards.reduce((function(t,e,n){var r=e.rank;return t+u.get(r)(t,n)}),0)},e.prototype.hasBlackjack=function(){return 21===this.getScore()&&2===this.count},e.prototype.hasBust=function(){return this.getScore()>21},Object.defineProperty(e.prototype,"hasCardsLimit",{get:function(){return 5===this.count},enumerable:!1,configurable:!0}),e}(f);var v=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const w=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return v(e,t),e.prototype.revealTopCard=function(){var t;null===(t=this.topCard)||void 0===t||t.show()},e.prototype.canDrawCard=function(){return this.getScore()<17},e}(b),g=function(){function t(t,e,n){void 0===n&&(n=0),this.elem=document.createElement("div"),this.backClassName="card back",this.rank=t;var r=-n/4;this.setTransform(r,r).foreground=n,this.faceClassName="card "+t+"-of-"+e,this.className=this.backClassName}return t.prototype.show=function(){return this.className=this.faceClassName,this},t.prototype.hide=function(){return this.className=this.backClassName,this},t.prototype.setTransform=function(t,e){return this.styles.transform="translate("+t+"px, "+e+"px)",this},t.prototype.getTransform=function(){return t=this.elem,e=getComputedStyle(t).transform.replace(/[^\d\-.,]/g,"").split(","),n=e[4],r=e[5],{x:Number(n)||0,y:Number(r)||0};var t,e,n,r},t.prototype.getRect=function(){return this.elem.getBoundingClientRect()},Object.defineProperty(t.prototype,"className",{set:function(t){this.elem.className=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"foreground",{set:function(t){this.styles.zIndex=t.toString()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"opacity",{set:function(t){this.styles.opacity=t.toString()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"styles",{get:function(){return this.elem.style},enumerable:!1,configurable:!0}),t}();var m=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),k=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function s(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}u((r=r.apply(t,e||[])).next())}))},C=function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};const x=function(t){function e(e,n,r){var o=t.call(this,e)||this;return n.forEach((function(t){r.forEach((function(e){var n=-o.count/4,r=new g(e,t,o.count).show().setTransform(n,-200+n);r.opacity=0,o.push(r)}))})),o}return m(e,t),e.prototype.intro=function(){return k(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,l(this.cards.map((function(t,e){var n=t.getTransform(),r=n.x,o=n.y,i=-e/4;return h({delay:8*e,duration:600,onProgress:function(e){t.setTransform(p(r,i,e),p(o,i,e)).opacity=p(0,1,e)},onEnd:function(){t.hide()}})})))];case 1:return t.sent(),[2]}}))}))},e.prototype.shuffle=function(){return k(this,void 0,void 0,(function(){var t,e,n;return C(this,(function(r){switch(r.label){case 0:for(t=this.count-1;t;t-=1)e=Math.floor(Math.random()*(t+1)),n=[this.cards[e],this.cards[t]],this.cards[t]=n[0],this.cards[e]=n[1];return[4,l(this.cards.reduce((function(t,e,n){var r=2*n,o=e.getTransform(),i=o.x,s=o.y,a=-n/4,u=(2*Math.round(Math.random())-1)*(Math.random()*e.getRect().width/2+30);return t.push(h({delay:r,duration:200,onProgress:function(t){e.setTransform(p(i,u,t),p(s,a,t))}}),h({duration:200,delay:r+200,onStart:function(){e.foreground=n},onProgress:function(t){e.setTransform(p(u,a,t),a)}})),t}),[]))];case 1:return r.sent(),[2]}}))}))},e.prototype.getOffsetTop=function(){var t=this.getRect(),e=t.x,n=t.y,r=this.topCard.getTransform();return{x:e+r.x,y:n+r.y}},e}(f),O=function(){function t(t){this.elem=t}return t.prototype.show=function(t){var e=this;l([h({duration:100,onStart:function(){e.elem.textContent=t},onProgress:function(t){e.opacity=p(0,1,t)},onEnd:function(){e.opacity=""}})])},t.prototype.hide=function(){var t=this;"0"!==this.styles.opacity&&l([h({duration:200,onProgress:function(e){t.opacity=p(1,0,e)},onEnd:function(){t.opacity=0}})])},Object.defineProperty(t.prototype,"styles",{get:function(){return this.elem.style},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"opacity",{set:function(t){this.styles.opacity=t.toString()},enumerable:!1,configurable:!0}),t}();var P=function(t){return document.getElementById(t)};new i(new a(new s(P("deal-btn")),new s(P("reset-btn")),new s(P("hit-btn")),new s(P("stand-btn"))),new O(P("popup")),new x(P("deck"),["clubs","spades","hearts","diamonds"],["ace","two","three","four","five","six","seven","eight","nine","ten","jack","queen","king"]),new w(P("dealer")),new b(P("player")))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,