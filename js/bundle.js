!function(t){var e={};function s(a){if(e[a])return e[a].exports;var i=e[a]={i:a,l:!1,exports:{}};return t[a].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,a){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(s.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(a,i,function(e){return t[e]}.bind(null,i));return a},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=1)}([function(t,e,s){},function(t,e,s){"use strict";s.r(e);const a=t=>new Promise(e=>{const s=t.map(t=>({...t,hasStarted:!1,hasEnded:!1}));requestAnimationFrame((function t(){if(!s.some(({hasEnded:t})=>!t))return e();const a=Date.now();s.forEach(t=>{const{start:e,end:s,onStart:i,onProgress:r,onEnd:n,hasStarted:o,hasEnded:d}=t;var c;d||a<e||(o||(t.hasStarted=!0,null==i||i()),null==r||r((c=(a-e)/(s-e))<.5?4*c**3:(c-1)*(2*c-2)*(2*c-2)+1),a>s&&(t.hasEnded=!0,null==n||n()))}),requestAnimationFrame(t)}))}),i=(t,e,s)=>t+(e-t)*s;class r{constructor(t,e,s,a,i){this.elem=document.createElement("div"),this.rank=void 0,this._backClassName="card back",this._faceClassName=void 0,this.rank=t,this.setPosition(s,a),this.foreground=i,this._faceClassName=`card ${t}-of-${e}`,this._className=this._backClassName}show(){this._className=this._faceClassName}hide(){this._className=this._backClassName}getPosition(){return(t=>{const[,,,,e,s]=getComputedStyle(t).getPropertyValue("transform").replace(/[^0-9\-.,]/g,"").split(",");return{x:+e||0,y:+s||0}})(this.elem)}setPosition(t,e){this._style.transform=`translate(${t}px, ${e}px)`}getWidth(){return t=this.elem,parseFloat(getComputedStyle(t).getPropertyValue("width"));var t}set foreground(t){this._style.zIndex=t}get _style(){return this.elem.style}set _className(t){this.elem.className=t}}class n{constructor(t){this.cards=[],this._elem=void 0,this._elem=t}push(t){this.cards.push(t),this._elem.append(t.elem)}pop(){return this.cards.pop()}get count(){return this.cards.length}get rect(){return this._elem.getBoundingClientRect()}get top(){return this.cards[this.count-1]}}class o extends n{shuffle(){for(let t=this.count-1;t;t--){const e=Math.random()*(t+1)|0;[this.cards[t],this.cards[e]]=[this.cards[e],this.cards[t]]}}toForeground(){this._style.zIndex="1"}toBackground(){this._style.zIndex="-1"}getTopPosition(){const{x:t,y:e}=this.rect,{x:s,y:a}=this.top.getPosition();return{x:t+s,y:e+a}}get _style(){return this._elem.style}}class d extends n{empty(){this.cards=[]}getTopPosition(t){return{x:(2===this.count?0:this.count-2)*t,y:this.rect.y}}}class c{constructor({delay:t=0,duration:e=0,onStart:s,onProgress:a,onEnd:i}){this.start=void 0,this.end=void 0,this.onStart=void 0,this.onProgress=void 0,this.onEnd=void 0,this.start=t+Date.now(),this.end=this.start+e,this.onStart=s,this.onProgress=a,this.onEnd=i}}class l{constructor(t,e,s){this.cardStack=void 0,this.cardStack=new o(t),e.forEach(t=>{s.forEach(e=>{const{count:s}=this.cardStack,a=-s/4;this.cardStack.push(new r(e,t,a,a,s))})})}async shuffle(){this.cardStack.shuffle(),await a(this.cardStack.cards.reduce((t,e,s)=>{const a=2*s,{x:r,y:n}=e.getPosition(),o=(2*Math.round(Math.random())-1)*(40*Math.random()+20)*parseFloat(getComputedStyle(document.body).getPropertyValue("font-size"))/16,d=-s/4;return t.push(new c({delay:a,duration:200,onProgress:t=>{e.setPosition(i(r,o,t),i(n,d,t))}}),new c({duration:200,delay:200+a,onStart:()=>{e.foreground=s},onProgress:t=>{e.setPosition(i(o,d,t),d)}})),t},[]))}}const h="Blackjack!",u="Push!",p="You won!",_="You lost!",y="ace",m="two",g="three",b="four",k="five",f="six",w="seven",S="eight",v="nine",P="ten",E="jack",C="queen",D="king",x=(new Map).set(y,(t,e)=>t<11&&e<2?11:1).set(m,()=>2).set(g,()=>3).set(b,()=>4).set(k,()=>5).set(f,()=>6).set(w,()=>7).set(S,()=>8).set(v,()=>9).set(P,()=>10).set(E,()=>10).set(C,()=>10).set(D,()=>10),B=[y,m,g,b,k,f,w,S,v,P,E,C,D],j=["clubs","spades","hearts","diamonds"];class O{constructor(t){this.elem=void 0,this._elem=t}attachHandler(t){this._elem.onclick=t}disable(){this._elem.setAttribute("disabled","")}enable(){this._elem.removeAttribute("disabled")}}class A{constructor(t,e,s,a){this.deal=void 0,this.reset=void 0,this.hit=void 0,this.stand=void 0,this.deal=new O(t),this.reset=new O(e),this.hit=new O(s),this.stand=new O(a)}disableAll(){this.deal.disable(),this.reset.disable(),this.hit.disable(),this.stand.disable()}allowHitOrStand(){this.hit.enable(),this.stand.enable()}}class W{constructor(t){this._elem=void 0,this._elem=t}show(t){this._elem.innerText=t,a([new c({duration:200,onProgress:t=>{this._opacity=i(0,1,t)},onEnd:()=>{this._opacity=""}})])}hide(){this._isVisible&&a([new c({duration:300,onProgress:t=>{this._opacity=i(1,0,t)},onEnd:()=>{this._opacity=0}})])}get _style(){return this._elem.style}set _opacity(t){this._style.opacity=t}get _isVisible(){return"0"!==this._style.opacity}}class F{constructor(t){this.cardStack=void 0,this.cardStack=new d(t)}getValue(){return this.cardStack.cards.reduce((t,{rank:e},s)=>t+x.get(e)(t,s),0)}isBlackjacked(){return 21===this.getValue()&&2===this.cardStack.count}isBusted(){return this.getValue()>21}get isCardsLimitReached(){return 5===this.cardStack.count}}class I extends F{constructor(t){super(t)}revealSecondCard(){this.cardStack.cards[1].show()}canDrawCard(){return this.getValue()<17}}const N=(t,e,s)=>({get(){const t=s.value.bind(this);return Object.defineProperty(this,e,{value:t,writable:!0}),t}});class V{constructor(t,e,s){this._dealer=void 0,this._deck=void 0,this._player=void 0,this._dealer=t,this._deck=e,this._player=s}async supplyPlayerWithCard(){await this._dragCardFromDeck(this._player)}async supplyDealerWithCard(t){await this._dragCardFromDeck(this._dealer,t)}async supplyDeckWithCards(){const{count:t,cards:e}=this._player.cardStack;await a([...e.map((t,e)=>this._getDragCardToDeckAnimation(t,this._player,e)),...this._dealer.cardStack.cards.map((e,s)=>this._getDragCardToDeckAnimation(e,this._dealer,t+s))])}async _dragCardFromDeck({cardStack:t},e=!0){const s=this._deck.cardStack.pop(),{x:i,y:r}=t.getTopPosition(s.getWidth());await a([this._getCardDragAnimation({card:s,dx:i,dy:r-this._deck.cardStack.rect.y,onEnd:()=>{s.setPosition(i,0),e&&s.show(),t.push(s)}})])}_getCardDragAnimation({card:t,dx:e,dy:s,onEnd:a}){const{x:r,y:n}=t.getPosition();return new c({onEnd:a,duration:300,onProgress:a=>{t.setPosition(i(r,e,a),i(n,s,a))}})}_getDragCardToDeckAnimation(t,{cardStack:{rect:e}},s){t.hide();const a=this._deck.cardStack.count+s;t.foreground=a;const{x:i,y:r}=this._deck.cardStack.getTopPosition(),n=s/4;return this._getCardDragAnimation({card:t,dx:i-e.x-n,dy:r-e.y-n,onEnd:()=>{const e=-a/4;t.setPosition(e,e),this._deck.cardStack.push(t)}})}}var z;function T(t,e,s,a,i){var r={};return Object.keys(a).forEach((function(t){r[t]=a[t]})),r.enumerable=!!r.enumerable,r.configurable=!!r.configurable,("value"in r||r.initializer)&&(r.writable=!0),r=s.slice().reverse().reduce((function(s,a){return a(t,e,s)||s}),r),i&&void 0!==r.initializer&&(r.value=r.initializer?r.initializer.call(i):void 0,r.initializer=void 0),void 0===r.initializer&&(Object.defineProperty(t,e,r),r=null),r}let M=(T((z=class{constructor({dealerElem:t,deckElem:e,playerElem:s,popupElem:a,dealBtnElem:i,resetBtnElem:r,hitBtnElem:n,standBtnElem:o}){this._dealer=void 0,this._deck=void 0,this._player=void 0,this._popup=void 0,this._buttons=void 0,this._cardSupplier=void 0,this._dealer=new I(t),this._deck=new l(e,j,B),this._player=new F(s),this._popup=new W(a),this._buttons=new A(i,r,n,o),this._cardSupplier=new V(this._dealer,this._deck,this._player),this._buttons.deal.attachHandler(this._deal),this._buttons.reset.attachHandler(this._reset),this._buttons.hit.attachHandler(this._hit),this._buttons.stand.attachHandler(this._stand),this._buttons.disableAll(),this._buttons.deal.enable()}async _deal(){this._popup.hide(),this._buttons.disableAll(),this._deck.cardStack.toForeground(),await this._deck.shuffle(),await this._deck.shuffle(),await this._cardSupplier.supplyPlayerWithCard(),await this._cardSupplier.supplyPlayerWithCard(),await this._cardSupplier.supplyDealerWithCard(),await this._cardSupplier.supplyDealerWithCard(!1),this._buttons.reset.enable(),this._checkForBlackjack()}async _reset(){this._popup.hide(),this._buttons.disableAll(),this._deck.cardStack.toBackground(),await this._cardSupplier.supplyDeckWithCards(),this._dealer.cardStack.empty(),this._player.cardStack.empty(),await this._deck.shuffle(),await this._deck.shuffle(),this._buttons.deal.enable()}async _hit(){this._buttons.disableAll(),await this._cardSupplier.supplyPlayerWithCard(),this._player.isBusted()?(this._dealer.revealSecondCard(),this._popup.show(_),this._buttons.reset.enable()):this._player.isCardsLimitReached?this._stand():(this._buttons.reset.enable(),this._buttons.allowHitOrStand())}async _stand(){this._buttons.disableAll(),this._dealer.revealSecondCard(),await this._supplyDealerWithCards(),this._conclude()}_checkForBlackjack(){this._player.isBlackjacked()||this._dealer.isBlackjacked()?(this._popup.show(h),this._dealer.revealSecondCard()):this._buttons.allowHitOrStand()}async _supplyDealerWithCards(){this._dealer.canDrawCard()&&!this._dealer.isCardsLimitReached&&(await this._cardSupplier.supplyDealerWithCard(),await this._supplyDealerWithCards())}_conclude(){const t=this._player.getValue(),e=this._dealer.getValue();let s=_;this._dealer.isBusted()||t>e?s=p:t===e&&(s=u),this._popup.show(s),this._buttons.reset.enable()}}).prototype,"_deal",[N],Object.getOwnPropertyDescriptor(z.prototype,"_deal"),z.prototype),T(z.prototype,"_reset",[N],Object.getOwnPropertyDescriptor(z.prototype,"_reset"),z.prototype),T(z.prototype,"_hit",[N],Object.getOwnPropertyDescriptor(z.prototype,"_hit"),z.prototype),T(z.prototype,"_stand",[N],Object.getOwnPropertyDescriptor(z.prototype,"_stand"),z.prototype),z);s(0);new M({dealerElem:document.getElementById("dealer"),deckElem:document.getElementById("deck"),playerElem:document.getElementById("player"),popupElem:document.getElementById("popup"),dealBtnElem:document.getElementById("deal-btn"),resetBtnElem:document.getElementById("reset-btn"),hitBtnElem:document.getElementById("hit-btn"),standBtnElem:document.getElementById("stand-btn")})}]);